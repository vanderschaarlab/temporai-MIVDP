name: Tests

on:
  push:
    branches: [main, release]
  pull_request:
    types: [opened, synchronize, reopened]
  schedule:
    - cron: "21 3 * * 4"
  workflow_dispatch:

jobs:
  # Lint code with pre-commit.
  Linter:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: [3.8]
        os: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install pre-commit
      - name: Run pre-commit validation
        run: pre-commit run --all-files

  # Run tests with pytest.
  Tests:
    needs: [Linter]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10"]
        os: [macos-latest, ubuntu-latest, windows-latest]
    env:
      CODECOV_OS: ${{ matrix.os }}
      CODECOV_PYTHON: ${{ matrix.python-version }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip" # Caching pip dependencies.
      - name: Download test files
        run: |
          pip install requests pyzipper
          python ${{ github.workspace }}/.github/workflows/scripts/get_test_data.py \
            "${{ secrets.TEST_DATA_ID }}" \
            "${{ secrets.TEST_DATA_PASSWORD }}" \
            "${{ github.workspace }}/data_root/mimiciv"
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install .[testing]
      - name: Test with pytest
        run: pytest -vvvx -m "not slow and not extra and not skipci" --durations=50 --cov

      # TODO: Enable codecov eventually.
      # - name: Upload coverage report to codecov
      #   uses: codecov/codecov-action@v3
      #   # Currently we only upload in one of the matrix cases: ubuntu + py38:
      #   if: (matrix.os == 'ubuntu-latest') && (matrix.python-version == '3.8')
      #   with:
      #     token: ${{ secrets.CODECOV_TOKEN }}
      #     flags: test
      #     env_vars: CODECOV_OS,CODECOV_PYTHON
      #     name: upload_test_${{ matrix.os }}_python${{ matrix.python-version }}
      #     fail_ci_if_error: false  # Whether CI fails if this step fails.
      #     os: ${{ runner.os }}
      #     verbose: true

      # TODO: Enable if there are doctests.
      # - name: Run doctests with pytest
      #   run: pytest -vvvx src/ --doctest-modules --durations=50
